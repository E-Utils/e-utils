{"version":3,"file":"eutils.min.js","sources":["../src/index.js","../src/dateFormat.js","../src/setUrlParam.js","../src/getUrlParam.js","../src/replace.js","../src/replaceAll.js","../src/trim.js","../src/toUpper.js","../src/toLower.js"],"sourcesContent":["import dateFormat from './dateFormat';\nimport setUrlParam from './setUrlParam';\nimport getUrlParam from './getUrlParam';\nimport replace from './replace';\nimport replaceAll from './replaceAll';\nimport trim from './trim';\nimport toUpper from './toUpper';\nimport toLower from './toLower';\n// import sayHello from './hello';\n\nexport default {\n  // sayHello,\n  dateFormat,\n  setUrlParam,\n  getUrlParam,\n  replace,\n  replaceAll,\n  trim,\n  toUpper,\n  toLower,\n};\n","/**\n * Date format and output the formatted date;\n *\n * @since 1.0.0\n * @category date;\n * @author yhm1694;\n * @param { number | Date } date, the origin date which you want to format;\n * @param { string } format, the format that the date you want to output;\n * @return { string } formatDate, return the formatted date;\n * @create_date 2018/07/15;\n * @modify_date 2018/07/15;\n *\n * @example\n *\n * dateFormat(1531643785284, 'yyyy-MM-dd');\n *\n * // => '2018-07-15'\n */\n\nconst dateFormat = (date, format) => {\n  let formattedDate;\n  date = new Date(date);\n\n  const regObj = {\n    'M+': date.getMonth() + 1,\n    'd+': date.getDate(),\n    'h+': date.getHours(),\n    'm+': date.getMinutes(),\n    's+': date.getSeconds(),\n    'q+': Math.floor((date.getMonth() + 3) / 3),\n    S: date.getMilliseconds(),\n  };\n  const keys = Object.keys(regObj);\n\n  if (/(y+)/.test(format)) {\n    formattedDate = format.replace(\n      RegExp.$1,\n      (`${date.getFullYear()}`).substr(4 - RegExp.$1.length));\n  }\n\n  keys.forEach((item) => {\n    if ((new RegExp(`(${item})`)).test(format)) {\n      formattedDate = formattedDate.replace(\n        RegExp.$1,\n        (RegExp.$1.length === 1) ?\n          (regObj[item]) : ((`00${regObj[item]}`).substr((`${regObj[item]}`).length)));\n    }\n  });\n\n  return formattedDate;\n};\n\nexport default dateFormat;\n","/**\n * set url param by object\n *\n * @since 1.0.0;\n * @category Object;\n * @author jiaguishan;\n * @param paramsObject {Object} param object;\n * @return no return\n * @create_date 2018/07/09;\n * @modify_date 2018/07/18;\n * @example\n *\n * current location href => http://web.ewt360.com\n * setUrlParam({\n *     id: 1,\n *     token: '807341-111-111aaa7a7a'\n * })\n * // => 'http://web.ewt360.com?id=1&token=807341-111-111aaa7a7a'\n *\n * current location href => http://web.ewt360.com?id=2\n * setUrlParam({\n *     id: 1,\n *     token: '807341-111-111aaa7a7a'\n * }, 'http://www.ewt360.com')\n * // => 'http://www.ewt360.com?id=1&token=807341-111-111aaa7a7a'\n */\nfunction setUrlParam(targetParams, originUrl = window.location.href) {\n  let resultUrl = originUrl;\n  Object\n    .entries(targetParams)\n    .forEach(([key, value]) => {\n      const replaceReg = new RegExp(`(^|)${key}=([^&]*)(|$)`);\n      const replaceText = `${key}=${value}`;\n      if (resultUrl.match(replaceReg)) {\n        const tmpReg = new RegExp(`(${key}=)([^&]*)`, 'gi');\n        resultUrl = resultUrl.replace(tmpReg, replaceText);\n      } else {\n        const joinFlag = resultUrl.match('[?]')\n          ? '&'\n          : '?';\n        resultUrl = `${resultUrl}${joinFlag}${replaceText}`;\n      }\n    });\n  return resultUrl;\n}\n\nexport default setUrlParam;\n","/**\n * get url param by name\n *\n * @since 1.0.0;\n * @category string;\n * @author jiaguishan;\n * @param name {string} param key;\n * @return {string};\n * @create_date 2018/07/09;\n * @modify_date 2018/07/18;\n * @example\n *\n * getUrlParam('token')\n * // => '807351-999-1asdni7asdn61621e8'\n */\nfunction getUrlParam(key, originUrl) {\n  const reg = new RegExp('(^|&)'.concat(key).concat('=([^&]*)(&|$)'), 'i');\n  originUrl = originUrl ? originUrl.toString() : window.location.href;\n  const index = originUrl.indexOf('?');\n  const result = originUrl\n    .substr(index + 1)\n    .match(reg);\n  if (result != null) {\n    return unescape(result[2]);\n  }\n  return '';\n}\n\nexport default getUrlParam;\n","/**\n * Replaces matches for `pattern` in `string` with `replacement`,\n * default is not global repalce,\n * also 0x00000-0xfffff characters replace.\n *\n * @since 1.0.0;\n * @category string;\n * @author fl;\n * @param str {string} the first string incoming;\n * @param pattern {string|regexp} the second (string|regexp) incoming;\n * @param replacement {string} the third string incoming;\n * @return {string};\n * @create_date 2018/07/06;\n * @modify_date 2018/07/06;\n * @example\n *\n * replace('hello world', /o/, 'hi')\n * // => 'hi world'\n */\n\nfunction replace(...args) {\n  const str = `${args[0]}`;\n  return args.length < 3 ? str : str.replace(args[1], args[2]);\n}\n\nexport default replace;\n","/**\n * Replace global characters,\n * also 0x00000-0xfffff characters replace.\n *\n * @since 1.0.0;\n * @category string;\n * @author fl2294;\n * @param str {string} the first string incoming;\n * @param sourcement {string} the second (string|regexp) incoming;\n * @param replacement {string} the second string incoming;\n * @return {string};\n * @create_date 2018/07/06;\n * @modify_date 2018/07/06;\n * @example\n *\n * replaceAll('𠮷abcdef𠮷Acdef', /𠮷/, 'k')\n * // => 'kabcdefkAcdef'\n */\n\nfunction replaceAll(...args) {\n  if (args.length < 3) return args[0];\n  const str = args[0];\n  const sourcement = args[1];\n  const replacement = args[2];\n  const raRegExp = new RegExp(sourcement, 'g');\n  return str.replace(raRegExp, replacement);\n}\n\nexport default replaceAll;\n","/**\n * Remove specified characters before and after,\n * also support 0x00000-0xfffff characters remove.\n *\n * @since 1.0.0;\n * @category string;\n * @author fl2294;\n * @param str {string} the first string incoming;\n * @param chars {string} the second string incoming;\n * @return {string};\n * @create_date 2018/07/06;\n * @modify_date 2018/07/06;\n * @example\n *\n * trim('#sadcdba#s', '#s') trim('  dsa  ') trim('𠮷abbb𠮷a', '𠮷a')\n * // => 'adcdba'  'dsa'  'bbb'\n */\n\nfunction trim(str, chars) {\n  if (str && chars === undefined) {\n    return str.trim();\n  }\n  if (!str || !chars) {\n    return str;\n  }\n  const r = `(^${chars})|(${chars}$)`;\n  str = str.replace(new RegExp(r, 'gu'), '');\n  return str;\n}\n\nexport default trim;\n","/**\n * All down to uppercase\n *\n * @since 1.0.0;\n * @category string;\n * @author fl2294;\n * @param str {string} the first string incoming;\n * @return {string};\n * @create_date 2018/07/06;\n * @modify_date 2018/07/06;\n * @example\n *\n * toUpper('aaa')\n * // => 'AAA'\n */\n\nfunction toUpper(str) {\n  return str.toUpperCase();\n}\n\nexport default toUpper;\n","/**\n * All down to lowercase.\n *\n * @since 1.0.0;\n * @category string;\n * @author fl2294;\n * @param str {string} the first string incoming;\n * @return {string};\n * @create_date 2018/07/06;\n * @modify_date 2018/07/06;\n * @example\n *\n * toLower(’AAA')\n * // => 'aaa'\n */\n\nfunction toLower(str) {\n  return str.toLowerCase();\n}\n\nexport default toLower;\n"],"names":["date","format","let","formattedDate","regObj","M+","Date","getMonth","d+","getDate","h+","getHours","m+","getMinutes","s+","getSeconds","q+","Math","floor","S","getMilliseconds","keys","Object","test","replace","RegExp","$1","getFullYear","substr","length","forEach","item","targetParams","originUrl","window","location","href","resultUrl","entries","ref","replaceReg","key","replaceText","value","match","const","tmpReg","joinFlag","reg","concat","index","toString","indexOf","result","unescape","str","args","sourcement","replacement","raRegExp","chars","undefined","trim","r","toUpperCase","toLowerCase"],"mappings":"wLAUe,qBCSKA,EAAMC,GACxBC,IAAIC,EAGEC,EAAS,CACbC,MAHFL,EAAO,IAAIM,KAAKN,IAGHO,WAAa,EACxBC,KAAMR,EAAKS,UACXC,KAAMV,EAAKW,WACXC,KAAMZ,EAAKa,aACXC,KAAMd,EAAKe,aACXC,KAAMC,KAAKC,OAAOlB,EAAKO,WAAa,GAAK,GACzCY,EAAGnB,EAAKoB,mBAEJC,EAAOC,OAAOD,KAAKjB,GAiBzB,MAfI,OAAOmB,KAAKtB,KACdE,EAAgBF,EAAOuB,QACrBC,OAAOC,OACH1B,EAAK2B,eAAiBC,OAAO,EAAIH,OAAOC,GAAGG,UAGnDR,EAAKS,iBAASC,GACR,IAAKN,WAAWM,OAAUR,KAAKtB,KACjCE,EAAgBA,EAAcqB,QAC5BC,OAAOC,GACe,IAArBD,OAAOC,GAAGG,OACRzB,EAAO2B,SAAgB3B,EAAO2B,IAASH,WAAWxB,EAAO2B,IAASF,YAIpE1B,eCvBT,SAAqB6B,EAAcC,kBAAYC,OAAOC,SAASC,MAC7DlC,IAAImC,EAAYJ,EAgBhB,OAfAX,OACGgB,QAAQN,GACRF,iBAASS,qBACFC,EAAa,IAAIf,cAAcgB,kBAC/BC,EAAiBD,MAAOE,EAC9B,GAAIN,EAAUO,MAAMJ,GAAa,CAC/BK,IAAMC,EAAS,IAAIrB,WAAWgB,cAAgB,MAC9CJ,EAAYA,EAAUb,QAAQsB,EAAQJ,OACjC,CACLG,IAAME,EAAWV,EAAUO,MAAM,OAC7B,IACA,IACJP,EAAY,GAAGA,EAAYU,EAAWL,KAGrCL,eC5BT,SAAqBI,EAAKR,GACxBY,IAAMG,EAAM,IAAIvB,OAAO,QAAQwB,OAAOR,GAAKQ,OAAO,iBAAkB,KAE9DC,GADNjB,EAAYA,EAAYA,EAAUkB,WAAajB,OAAOC,SAASC,MACvCgB,QAAQ,KAC1BC,EAASpB,EACZL,OAAOsB,EAAQ,GACfN,MAAMI,GACT,OAAc,MAAVK,EACKC,SAASD,EAAO,IAElB,YCLT,kEACER,IAAMU,EAAM,GAAGC,EAAK,GACpB,OAAOA,EAAK3B,OAAS,EAAI0B,EAAMA,EAAI/B,QAAQgC,EAAK,GAAIA,EAAK,gBCH3D,kEACE,GAAIA,EAAK3B,OAAS,EAAG,OAAO2B,EAAK,GACjCX,IAAMU,EAAMC,EAAK,GACXC,EAAaD,EAAK,GAClBE,EAAcF,EAAK,GACnBG,EAAW,IAAIlC,OAAOgC,EAAY,KACxC,OAAOF,EAAI/B,QAAQmC,EAAUD,SCP/B,SAAcH,EAAKK,GACjB,GAAIL,QAAiBM,IAAVD,EACT,OAAOL,EAAIO,OAEb,IAAKP,IAAQK,EACX,OAAOL,EAETV,IAAMkB,EAAI,KAAKH,QAAWA,OAE1B,OADAL,EAAMA,EAAI/B,QAAQ,IAAIC,OAAOsC,EAAG,MAAO,aCVzC,SAAiBR,GACf,OAAOA,EAAIS,uBCDb,SAAiBT,GACf,OAAOA,EAAIU"}