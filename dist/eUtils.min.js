(function(l, i, v, e) { v = l.createElement(i); v.async = 1; v.src = '//' + (location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; e = l.getElementsByTagName(i)[0]; e.parentNode.insertBefore(v, e)})(document, 'script');
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global.EUtils = factory());
}(this, (function () { 'use strict';

  /**
   * Date format and output the formatted date;
   *
   * @since 1.0.0
   * @category date;
   * @author yhm1694;
   * @param { number | Date } date, the origin date which you want to format;
   * @param { string } format, the format that the date you want to output;
   * @return { string } formatDate, return the formatted date;
   * @create_date 2018/07/15;
   * @modify_date 2018/07/15;
   *
   * @example
   *
   * dateFormat(1531643785284, 'yyyy-MM-dd');
   *
   * // => '2018-07-15'
   */

  var dateFormat = function dateFormat(date, format) {
    if (!format) {
      return date;
    }

    var formattedDate = format;
    date = new Date(date);

    var regObj = {
      'M+': date.getMonth() + 1,
      'd+': date.getDate(),
      'h+': date.getHours(),
      'm+': date.getMinutes(),
      's+': date.getSeconds(),
      'q+': Math.floor((date.getMonth() + 3) / 3),
      'S': date.getMilliseconds()
    };
    var keys = Object.keys(regObj);

    if (/(y+)/.test(format)) {
      formattedDate = format.replace(RegExp.$1, ('' + date.getFullYear()).substr(4 - RegExp.$1.length));
    }

    keys.forEach(function (item) {
      if (new RegExp('(' + item + ')').test(format)) {
        formattedDate = formattedDate.replace(RegExp.$1, RegExp.$1.length === 1 ? regObj[item] : ('00' + regObj[item]).substr(('' + regObj[item]).length));
      }
    });

    return formattedDate;
  };

  /**
   * set url param by object
   *
   * @since 1.0.0;
   * @category Object;
   * @author jiaguishan;
   * @param paramsObject {Object} param object;
   * @return no return
   * @create_date 2018/07/09;
   * @modify_date 2018/07/18;
   * @example
   *
   * current location href => http://web.ewt360.com
   * setUrlParam({
   *     id: 1,
   *     token: '807341-111-111aaa7a7a'
   * })
   * // => 'http://web.ewt360.com?id=1&token=807341-111-111aaa7a7a'
   *
   * current location href => http://web.ewt360.com?id=2
   * setUrlParam({
   *     id: 1,
   *     token: '807341-111-111aaa7a7a'
   * }, 'http://www.ewt360.com')
   * // => 'http://www.ewt360.com?id=1&token=807341-111-111aaa7a7a'
   */
  function setUrlParam(targetParams) {
    var originUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location.href;

    var resultUrl = originUrl;
    var keys = Object.keys(targetParams);
    var i = keys.length;
    var resArray = [];

    while (i--) {
      resArray[i] = [keys[i], targetParams[keys[i]]];
    }

    resArray.forEach(function (_ref) {
      var key = _ref[0],
          value = _ref[1];

      var replaceReg = new RegExp('(^|)' + key + '=([^&]*)(|$)');
      var replaceText = key + '=' + value;
      if (resultUrl.match(replaceReg)) {
        var tmpReg = new RegExp('(' + key + '=)([^&]*)', 'gi');
        resultUrl = resultUrl.replace(tmpReg, replaceText);
      } else {
        var joinFlag = resultUrl.match('[?]') ? '&' : '?';
        resultUrl = '' + resultUrl + joinFlag + replaceText;
      }
    });

    return resultUrl;
  }

  /**
   * get url param by name
   *
   * @since 1.0.0;
   * @category string;
   * @author jiaguishan;
   * @param name {string} param key;
   * @return {string};
   * @create_date 2018/07/09;
   * @modify_date 2018/07/18;
   * @example
   *
   * getUrlParam('token')
   * // => '807351-999-1asdni7asdn61621e8'
   */
  function getUrlParam(key, originUrl) {
    var reg = new RegExp('(^|&)'.concat(key).concat('=([^&]*)(&|$)'), 'i');
    originUrl = originUrl ? originUrl.toString() : window.location.href;
    var index = originUrl.indexOf('?');
    var result = originUrl.substr(index + 1).match(reg);
    if (result != null) {
      return unescape(result[2]);
    }
    return '';
  }

  /**
   * Replaces matches for `pattern` in `string` with `replacement`,
   * default is not global repalce,
   * also 0x00000-0xfffff characters replace.
   *
   * @since 1.0.0;
   * @category string;
   * @author fl;
   * @param str {string} the first string incoming;
   * @param pattern {string|regexp} the second (string|regexp) incoming;
   * @param replacement {string} the third string incoming;
   * @return {string};
   * @create_date 2018/07/06;
   * @modify_date 2018/07/06;
   * @example
   *
   * replace('hello world', /o/, 'hi')
   * // => 'hellhi world'
   */

  function replace() {
    var str = "" + (arguments.length <= 0 ? undefined : arguments[0]);
    return arguments.length < 3 ? str : str.replace(arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
  }

  /**
   * Replace global characters,
   * also 0x00000-0xfffff characters replace.
   *
   * @since 1.0.0;
   * @category string;
   * @author fl2294;
   * @param str {string} the first string incoming;
   * @param sourcement {string} the second (string|regexp) incoming;
   * @param replacement {string} the second string incoming;
   * @return {string};
   * @create_date 2018/07/06;
   * @modify_date 2018/07/06;
   * @example
   *
   * replaceAll('𠮷abcdef𠮷Acdef', /𠮷/, 'k')
   * // => 'kabcdefkAcdef'
   */

  function replaceAll() {
    if (arguments.length < 3) return arguments.length <= 0 ? undefined : arguments[0];
    var str = arguments.length <= 0 ? undefined : arguments[0];
    var sourcement = arguments.length <= 1 ? undefined : arguments[1];
    var replacement = arguments.length <= 2 ? undefined : arguments[2];
    var raRegExp = void 0;
    var strType = Object.prototype.toString.call(sourcement);
    if (strType === '[object RegExp]') {
      var _sourcement = sourcement;
      if (_sourcement.flags.indexOf('g') <= -1) {
        _sourcement = RegExp(_sourcement.source, _sourcement.flags + 'g');
      }
      raRegExp = _sourcement;
    }
    if (strType === '[object String]') {
      raRegExp = new RegExp(sourcement, 'g');
    }
    return str.replace(raRegExp, replacement);
  }

  /**
   * Remove specified characters before and after,
   * also support 0x00000-0xfffff characters remove.
   *
   * @since 1.0.0;
   * @category string;
   * @author fl2294;
   * @param str {string} the first string incoming;
   * @param chars {string} the second string incoming;
   * @return {string};
   * @create_date 2018/07/06;
   * @modify_date 2018/07/06;
   * @example
   *
   * trim('#sadcdba#s', '#s') trim('  dsa  ') trim('𠮷abbb𠮷a', '𠮷a')
   * // => 'adcdba'  'dsa'  'bbb'
   */

  function trim(str, chars) {
    if (str && chars === undefined) {
      return str.trim();
    }
    if (!str || !chars) {
      return str;
    }
    var r = '(^' + chars + ')|(' + chars + '$)';
    str = str.replace(new RegExp(r, 'gu'), '');
    return str;
  }

  /**
   * All down to uppercase
   *
   * @since 1.0.0;
   * @category string;
   * @author fl2294;
   * @param str {string} the first string incoming;
   * @return {string};
   * @create_date 2018/07/06;
   * @modify_date 2018/07/06;
   * @example
   *
   * toUpper('aaa')
   * // => 'AAA'
   */

  function toUpper(str) {
    return str.toUpperCase();
  }

  /**
   * All down to lowercase.
   *
   * @since 1.0.0;
   * @category string;
   * @author fl2294;
   * @param str {string} the first string incoming;
   * @return {string};
   * @create_date 2018/07/06;
   * @modify_date 2018/07/06;
   * @example
   *
   * toLower(’AAA')
   * // => 'aaa'
   */

  function toLower(str) {
    return str.toLowerCase();
  }

  /**
   * Generate UUID, maybe used to render react list;
   *
   * @since 1.1.0
   * @category string;
   * @author yhm1694;
   * @return { string } uuid;
   * @create_date 2018/08/22;
   * @modify_date 2018/08/22;
   *
   * @example
   *
   * generateUUID();
   *
   * // => 'af22-3fa8-4028-8dea-30a2'
   */

  var generateUUID = function generateUUID() {
    var uuid = 'xxxx-xxxx-xxxx-xxxx-xxxx'.replace(/[x]/g, function () {
      var randomNum = Math.random() * 16 | 0;
      var newChar = randomNum.toString(16);

      return newChar;
    });

    return uuid;
  };

  /**
   * array to unique,
   *
   * @since 1.1.0;
   * @category array;
   * @author fl2294;
   * @param arr {array} the first array incoming;
   * @return {array};
   * @create_date 2018/07/19;
   * @modify_date 2018/07/19;
   * @example
   *
   * unique([1, 3, 5, 6, 8, 8, 6, 3, [1,2], [1,2], {item: 1, 2: 3}, {item: 1, 2: 3}])
   * // => [1, 3, 5, 6, 8, [1,2], {item: 1, 2: 3}]
   */

  function unique(arr, iterator) {
    var _hash = function _hash(obj) {
      var power = 1;
      var res = 0;
      var string = JSON.stringify(obj, null, 2);
      for (var i = 0, l = string.length; i < l; i++) {
        switch (string[i]) {
          case '{':
            power *= 2;
            break;
          case '}':
            power /= 2;
            break;
          case ' ':
          case '\n':
          case '\r':
          case '\t':
            break;
          default:
            res += string[i].charCodeAt(0) * power;
        }
      }
      return res;
    };

    var __arr = [];
    arr.forEach(function (item) {
      if (__arr.some(function (__item) {
        return _hash(__item) === _hash(item);
      })) return;
      __arr.push(item);
    });
    _hash = null;
    if (iterator) {
      __arr = __arr.filter(iterator);
    }
    return __arr;
  }

  /**
   * two of array to union,
   *
   * @since 1.1.0;
   * @category array;
   * @author fl2294;
   * @param firstArr {array} the first array incoming;
   * @param secondArr {array} the second array incoming;
   * @return {array};
   * @create_date 2018/07/19;
   * @modify_date 2018/07/19;
   * @example
   *
   * union([1, 3, 5],  [6, 8, 8, 6, 3])
   * // => [1, 3, 5, 6, 8]
   */

  //并集
  function union(firstArr, secondArr) {
    return unique(firstArr.concat(secondArr));
  }

  /**
   * find a value in array|string|object,
   *
   * @since 1.1.0;
   * @category array;
   * @author fl2294;
   * @param collection  {array|string|object} the first collection incoming;
   * @param value {array} the second value incoming;
   * @param fromIndex=0 {array} the three array incoming;
   * @return {boolean};
   * @create_date 2018/07/19;
   * @modify_date 2018/07/19;
   * @example
   *
   * minus([1, 3, 5, 6], [8, 8, 6, 3, 2])
   * // => [1, 5]
   */

  //查找元素是否在指定集合中
  function includes(collection, value) {
    var fromIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

    var _hash = function _hash(obj) {
      var power = 1;
      var res = 0;
      var string = JSON.stringify(obj, null, 2);
      for (var i = 0, l = string.length; i < l; i++) {
        switch (string[i]) {
          case '{':
            power *= 2;
            break;
          case '}':
            power /= 2;
            break;
          case ' ':
          case '\n':
          case '\r':
          case '\t':
            break;
          default:
            res += string[i].charCodeAt(0) * power;
        }
      }
      return res;
    };
    if (Object.prototype.toString.call(collection) === '[object Array]') {
      collection = collection.slice(fromIndex, collection.length);
      for (var i = 0, len = collection.length; i < len; i++) {
        if (_hash(collection[i]) === _hash(value)) {
          return true;
        }
      }
      return false;
    }

    if (Object.prototype.toString.call(collection) === '[object String]') {
      collection = collection.substr(fromIndex);
      return collection.indexOf(value) > -1;
    }

    if (Object.prototype.toString.call(collection) === '[object Object]') {
      return collection.hasOwnProperty(value);
    }

    _hash = null;
    return false;
  }

  /**
   * two of array to cross,
   *
   * @since 1.1.0;
   * @category array;
   * @author fl2294;
   * @param firstArr {array} the first array incoming;
   * @param secondArr {array} the second array incoming;
   * @return {array};
   * @create_date 2018/07/19;
   * @modify_date 2018/07/19;
   * @example
   *
   * intersection([1, 3, 5, 6], [8, 8, 6, 3])
   * // => [3, 6]
   */

  //交集
  function intersection(firstArr, secondArr) {
    return unique(firstArr).filter(function (o) {
      return includes(secondArr, o) ? o : null;
    });
  }

  /**
   * two of array to minus,
   *
   * @since 1.1.0;
   * @category array;
   * @author fl2294;
   * @param firstArr {array} the first array incoming;
   * @param secondArr {array} the second array incoming;
   * @return {array};
   * @create_date 2018/07/19;
   * @modify_date 2018/07/19;
   * @example
   *
   * minus([1, 3, 5, 6], [8, 8, 6, 3, 2])
   * // => [1, 5]
   */

  //差集
  function minus(firstArr, secondArr) {
    return unique(firstArr).filter(function (o) {
      return includes(secondArr, o) ? null : o;
    });
  }

  /**
   * indexOf, Find where a specified string value first appears in the string
   *
   * @since 1.0.0;
   * @category array;
   * @author jiaguishan;
   * @param array {array} origin array;
   * @param value {number/string} find value;
   * @param fromIndex {number} start number;
   * @return {number};
   * @create_date 2018/08/27;
   * @modify_date 2018/08/27;
   * @example
   *
   * indexOf([1, 2, 1, 2], 2)
   * // => 1
   *
   * // Search from the `fromIndex`
   * indexOf([1, 2, 1, 2], 2, 2)
   * // => 3
   */
  function indexOf(array, value, fromIndex) {
    var length = array === null ? 0 : array.length;
    if (!length) {
      return -1;
    }
    var index = fromIndex ? +fromIndex : 0;
    if (index < 0) {
      index = Math.max(length + index, 0);
    }
    index = index - 1;
    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  function createCommonjsModule(fn, module) {
  	return module = { exports: {} }, fn(module, module.exports), module.exports;
  }

  var js_cookie = createCommonjsModule(function (module, exports) {
  (function (factory) {
  	var registeredInModuleLoader = false;
  	{
  		module.exports = factory();
  		registeredInModuleLoader = true;
  	}
  	if (!registeredInModuleLoader) {
  		var OldCookies = window.Cookies;
  		var api = window.Cookies = factory();
  		api.noConflict = function () {
  			window.Cookies = OldCookies;
  			return api;
  		};
  	}
  }(function () {
  	function extend () {
  		var i = 0;
  		var result = {};
  		for (; i < arguments.length; i++) {
  			var attributes = arguments[ i ];
  			for (var key in attributes) {
  				result[key] = attributes[key];
  			}
  		}
  		return result;
  	}

  	function init (converter) {
  		function api (key, value, attributes) {
  			var result;
  			if (typeof document === 'undefined') {
  				return;
  			}

  			// Write

  			if (arguments.length > 1) {
  				attributes = extend({
  					path: '/'
  				}, api.defaults, attributes);

  				if (typeof attributes.expires === 'number') {
  					var expires = new Date();
  					expires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);
  					attributes.expires = expires;
  				}

  				// We're using "expires" because "max-age" is not supported by IE
  				attributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';

  				try {
  					result = JSON.stringify(value);
  					if (/^[\{\[]/.test(result)) {
  						value = result;
  					}
  				} catch (e) {}

  				if (!converter.write) {
  					value = encodeURIComponent(String(value))
  						.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);
  				} else {
  					value = converter.write(value, key);
  				}

  				key = encodeURIComponent(String(key));
  				key = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);
  				key = key.replace(/[\(\)]/g, escape);

  				var stringifiedAttributes = '';

  				for (var attributeName in attributes) {
  					if (!attributes[attributeName]) {
  						continue;
  					}
  					stringifiedAttributes += '; ' + attributeName;
  					if (attributes[attributeName] === true) {
  						continue;
  					}
  					stringifiedAttributes += '=' + attributes[attributeName];
  				}
  				return (document.cookie = key + '=' + value + stringifiedAttributes);
  			}

  			// Read

  			if (!key) {
  				result = {};
  			}

  			// To prevent the for loop in the first place assign an empty array
  			// in case there are no cookies at all. Also prevents odd result when
  			// calling "get()"
  			var cookies = document.cookie ? document.cookie.split('; ') : [];
  			var rdecode = /(%[0-9A-Z]{2})+/g;
  			var i = 0;

  			for (; i < cookies.length; i++) {
  				var parts = cookies[i].split('=');
  				var cookie = parts.slice(1).join('=');

  				if (!this.json && cookie.charAt(0) === '"') {
  					cookie = cookie.slice(1, -1);
  				}

  				try {
  					var name = parts[0].replace(rdecode, decodeURIComponent);
  					cookie = converter.read ?
  						converter.read(cookie, name) : converter(cookie, name) ||
  						cookie.replace(rdecode, decodeURIComponent);

  					if (this.json) {
  						try {
  							cookie = JSON.parse(cookie);
  						} catch (e) {}
  					}

  					if (key === name) {
  						result = cookie;
  						break;
  					}

  					if (!key) {
  						result[name] = cookie;
  					}
  				} catch (e) {}
  			}

  			return result;
  		}

  		api.set = api;
  		api.get = function (key) {
  			return api.call(api, key);
  		};
  		api.getJSON = function () {
  			return api.apply({
  				json: true
  			}, [].slice.call(arguments));
  		};
  		api.defaults = {};

  		api.remove = function (key, attributes) {
  			api(key, '', extend(attributes, {
  				expires: -1
  			}));
  		};

  		api.withConverter = init;

  		return api;
  	}

  	return init(function () {});
  }));
  });

  /**
   * Set Cookie
   *
   * @since 1.1.0
   * @category storage;
   * @author caiyue2359;
   * @param name {string}
   * @param value {string/object}, if value is an object, it will be parsed by JSON.stringify,
   * and you can get it as an object using getCookie('key',true)
   * @param config {object}, sample:{
   *  expires:7                       {number}, indicating how many days should the cookie expired
   *  domain:'www.domain.com',        {string}, indicating a valid domain where the cookie should be visible. The cookie will also be visible to all subdomains.
   *  path:'/cookie/path',            {string},  indicating the path where the cookie is visible.
   *  secure:true                     {boolean}, indicating if the cookie transmission requires a secure protocol (https)
   * }
   * @create_date 2018/08/27;
   * @modify_date 2018/08/27;
   *
   * @example
   *
   * setCookie('name','value');
   *
   */

  var setCookie = function setCookie(name, value, config) {
    js_cookie.set.call(null, name, value, config);
  };

  /**
   * Get Cookie
   *
   * @since 1.1.0
   * @category storage;
   * @author caiyue2359;
   * @param name, {string} cookie name
   * @param isObject, {boolean} is the return an object,using JSON.parse
   * @return value;
   * @create_date 2018/08/27;
   * @modify_date 2018/08/27;
   *
   * @example
   *
   * getCookie('name');
   *
   * // => 'value'
   */

  var getCookie = function getCookie(name, isObject) {
    if (isObject) {
      try {
        return js_cookie.getJSON(name);
      } catch (e) {
        return null;
      }
    } else {
      return js_cookie.get(name);
    }
  };

  /**
   * Remove Cookie
   *
   * @since 1.1.0
   * @category storage;
   * @author caiyue2359;
   * @param name {string}
   * @param config {object}, sample:{
   *  domain:'www.domain.com',        {string}, indicating a valid domain where the cookie should be visible. The cookie will also be visible to all subdomains.
   *  path:'/cookie/path',            {string},  indicating the path where the cookie is visible.
   * }
   * IMPORTANT! when deleting a cookie, you must pass the exact same path and domain attributes that was used to set the cookie.
   *
   * @create_date 2018/08/27;
   * @modify_date 2018/08/27;
   *
   * @example
   *
   * removeCookie('name',{path:'/the/correct/cookie/path'});
   */

  var removeCookie = function removeCookie(name, config) {
    js_cookie.remove.call(null, name, config);
  };

  /**
   * Find the maximum value from the array;
   *
   * @since 1.2.0
   * @category Math;
   * @author yhm1694;
   * @param { Array } array: The array to search;
   * @return { String | Number } result: The maximum value;
   * @create_date 2018/09/10;
   * @modify_date 2018/09/10;
   *
   * @example
   *
   * max([1, 2, 3, 4]);
   *
   * // => 4
   */

  var max = function max(array) {
    var result = void 0;

    if (!array || array.length === 0) {
      return result;
    }

    result = array.sort().reverse()[0];

    return result;
  };

  var index = {
    dateFormat: dateFormat,
    setUrlParam: setUrlParam,
    getUrlParam: getUrlParam,
    replaceAll: replaceAll,
    replace: replace,
    trim: trim,
    toUpper: toUpper,
    toLower: toLower,
    generateUUID: generateUUID,
    union: union,
    intersection: intersection,
    minus: minus,
    unique: unique,
    indexOf: indexOf,
    setCookie: setCookie,
    getCookie: getCookie,
    removeCookie: removeCookie,
    max: max
  };

  return index;

})));
//# sourceMappingURL=eUtils.min.js.map
